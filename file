 def parse_input(self,input):
        output=[]
        simulation = []
        start_symbol = self.grammar.get_start_symbol()
        stack = []
        input.append("$")
        stack.append("$")
        stack.append(start_symbol)
        while(len(stack) !=0):
            row = []
            row.append(stack.copy())
            row.append(input.copy())
            if self.grammar.is_terminal(stack[-1]):
                if stack[-1] != input[0]:
                    stack.pop(-1)
                    output.append("Error missing terminal in stack")
                else:
                    stack.pop(-1)
                    input.pop(0)
            else:
                if(self.is_empty_production(stack[-1],input[0])):
                    if self.is_sync(stack[-1],input[0]):
                        stack.pop(-1)
                    else:
                        input.pop(0)
                        output.append("Error Illegal Non Terminal Discard input token")

                else:
                    non_terminal = stack[-1]
                    stack.pop(-1)
                    output_string = non_terminal + "-->"
                    list_of_production=self.get_production(non_terminal,input[0])
                    list_of_production.reverse()
                    for element in list_of_production:
                        stack.append(element)
                    list_of_production.reverse()
                    output_string+=" ".join(list_of_production)
                    output.append(output_string)

            row.append(output[-1])
            simulation.append(row)

            if len(input)==0:
                input.append("$")


        if len(input) !=1:
            print("UNMatched",input)
        else:
            print(tabulate(simulation, ["stack","input","production used"]))


